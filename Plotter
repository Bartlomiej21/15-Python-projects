# This program creates/loads a dataframe, then plots data in a way specified by user


# imports
import numpy as np
import pandas as pd
import plotly as pl
import plotly.offline as po
import cufflinks as cf
import string


po.init_notebook_mode(connected=True)
cf.go_offline()

####################################################################################
def createdata(data):  
    # this function is to create a dataframe, either from file, random or by user
    # data parameter above is the input by user, chosen at start1 function (actual start of program)
    
    global df1  # this will be my return dataframe
    
    if(data ==1):
        dalej = False
        while dalej == False:
            try:
                x = int(input('Please write a number of rows (1-100): '))
                y = int(input('Please write a number of columns (1-5): '))
                dalej=True
            except:
                print('Please write a correct number.')
                dalej=False
            
            if dalej:
                if x>0 and x<101 and y>0 and y<6:
                    pass
                else:
                    dalej=False
                   
        col = [string.ascii_uppercase[i] for i in range (0,y)] # just simple ['A','B', etc.] column names
        print(col)
        df1=pd.DataFrame(np.random.rand(x,y), columns = col)
        print(df1)
    
    
    elif(data ==2):
        col = [string.ascii_uppercase[i] for i in range (0,3)]
        dalej = False
        
        while dalej == False:
        
            x = input('Please write 9 numbers separated by comma: ')
            x2 = list(x.split(','))
            
            for count,i in enumerate(x2):
                if i=='':
                    x2[count]=0
                    
            try:
                x2= [int(i) for i in x2]
                
            except:
                print("Please write only whole numbers!")

            print(x2)
            dalej = True
            
            for i in x2:
                if type(i)!=int:
                    dalej=False
        
                else:
                    pass

        
        # at this point we should have a list of integers

        if len(x2)>9:
            x2 = x2[0:9]
        if len(x2)<9:
            while len(x2)!=9:
                x2.append(0)

        dalej=False
        
        print(x2)
        
        x2 = np.array(x2).reshape(3,3)
        
        df1=pd.DataFrame(x2, columns = col)
        print(df1)
        
    elif (data==3):
        file = input('Enter the file name: \n')
        # 188.iris.csv
        # 187.tips.csv  
        
        try:
            df1 = pd.read_csv(file)
            print("OK file")
        except:
            print('There is no such file!')
            createdata(3)
        
        
    
    # should not be possible to enter anything besides 1-3, but to be sure:
    else:
        print('DataFrame creation failed!')
        
        
 #################################################################################################
 # function for a complete dataframe plot
def plotter(plot):
    if plot==1:
        finalplot=df1.iplot(kind='scatter')
    elif plot==2:
        finalplot=df1.iplot(kind='scatter',mode='markers',symbol='x',colorscale='paired')
    elif plot==3:
        finalplot = df1.iplot(kind='bar')
    elif plot==4:
        finalplot = df1.iplot(kind='hist')
    elif plot==5:
        finalplot = df1.iplot(kind='box')
    elif plot==6:
        try:
            finalplot = df1.iplot(kind='surface')
        except:
            print("Not supported with this data")
    else:
        print("Something did go wrong. Please check your input again.")
    

# plotter(7)  # this is for quick testing

###############
#plotter2

# this is for more complicated plots when user want to plot specific columns
def plotter2(plot):
    
    a = len(df1.columns.values) 
    b = list(df1.columns.values)
    
    print("This are the columns: ",b)
    col_nr = input("How many columns to plot (max {}). ".format(a))
    
    
    # checking whether the input is correct
    try:
        col_nr = int(col_nr)
        if col_nr>0 and col_nr<=a:
            pass
        else:
            print("The number of columns is incorrect. Please try again.")
            plotter2(plot)
    
            
    except:
        print("Please insert the correct number!")
        plotter2(plot)
    
    
    
    i = 0
    col = []
    
    # user chooses specific columns
    while i < col_nr:
        print(b)

        c = input('Which columns to plot? Write column number or type q to finish.')
        
        if c=='q' or c=='Q':
            break
        else:

            try:
                c = int(c)
                if c-1 not in col:
                    col.append(c-1)
                    i+=1
                else:
                    print("You've already chosen that column.")

            except:
                print("You need to input only numbers!")

    # if user will quit without choosing any column. Could be overworked differently, this is just to simplify
    if len(col)==0:
        col=b[0]


    print(col)
    
    col_plot = [b[j] for j in col]   #list of columns names chosen by user
    print(col_plot)
                
    # finally, some good plot   
    if plot==1:
        finalplot = df1[col_plot].iplot(kind='scatter')
    elif plot==2:
        finalplot=df1[col_plot].iplot(kind='scatter',mode='markers',symbol='x',colorscale='paired')
    elif plot==3:
        finalplot = df1[col_plot].iplot(kind='bar')     
    elif plot==4:
        finalplot = df1[col_plot].iplot(kind='hist')
    elif plot==5:
        finalplot = df1[col_plot].iplot(kind='box')
    elif plot==6:
        try:
            finalplot = df1[col_plot].iplot(kind='surface')
        except:
            print("Not supported with this data or just one column chosen.")
    elif plot==7:
        try:
            finalplot = df1[col_plot].iplot(kind='bubble')
        except:
            print("Not supported with this data or just one column chosen.")
    
    else:
        print("Something did go wrong. Please check your input again.")
       

plotter2(1)  # for quick tests

        
##########################################################################
# function lets user choose plot type
def main(cho2):
    if cho2==1:
        print("Select the type of plot by entering 1 to 6: ")
        print('''1.Line plot
2.Scatter plot
3.Bar plot
4.Histogram
5.Box plot
6.Surface plot''')
        
       
        dalej=False
        
        while dalej==False:
            
            plot = input()
            try:
                plot = int(plot)
                if plot<1 or plot>6:
                    print("Choose 1-6")
                    
                else:
                    dalej=True
                    print("OK")
            except:
                print("You have to choose again")
                
        # after the loop we should have 1-6 int number
        
        output = plotter(plot)  #this is for future function
        
    elif cho2==2:
        print("Select the type of plot by entering 1 to 7: ")
        print('''1.Line plot
2.Scatter plot
3.Bar plot
4.Histogram
5.Box plot
6.Surface plot
7.Bubble plot''')
        
        dalej=False
        
        while dalej==False:
            
            plot = input()
            try:
                plot = int(plot)
                if plot<1 or plot>7:
                    print("Choose 1-7")
                    
                else:
                    dalej=True
                    print("OK")
            except:
                print("You have to choose again")
        
        output = plotter2(plot)

#main(2)
#df1.head()


######################################################
print('Please select the type of data you need to plot: 1, 2 or 3.')
print('1. Random data with x rows and y columns (max 100 and 5, respectively).')
print('2. Customize dataframe with 3 columns and 3 rows.')
print('3. Input data from a file.')

# starting function. The first step is to create/load data. 
def start1():
    
    try:
        cho1 = int(input())
    except:
        print('Bad input. Please write a number between 1 and 3.')
        start1()

    if cho1>0 and cho1<4:
        df1= createdata(cho1) 
    else:
        print('Choose number between 1-3!')
        start1()
    
    
    
  
start1()    


# sample csv file names if choice 3 is selected
# 188.iris.csv
# 187.tips.csv

print('Check your columns before plotting.')
df1.head(10)


print("What kind of plot do you need: a complete data plot, or specific columns?")

cho2=0
while cho2==0:
    cho2=input('Please enter 1(complete) or 2(specific): ')
    try:
        cho2 = int(cho2)
        if cho2==1 or cho2==2:
            pass

        else:
            cho2=0
            print("Wrong number.")
    except:
        print('Please enter 1 or 2!')
        cho2=0

main(cho2)
    



 
        

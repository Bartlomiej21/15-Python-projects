# pierwsza faza programu - drukuje poprawnie. Następnie trzeba wprowadzić input (X albo O), a potem ruchy komputera i zakończenia programu
# druga faza - podstawowa funkcjonalność. Brakuje ruchów komputera. Zrobiłem wstępny szkic algorytmu ruchów AI 
# 3 - dodałem wstępne warunki zakończenia gry (nie działają) Prawdopodobnie licznik nie działa. dodałem jeden z algo AI - działa, ale być może będzie wymagał poprawek
# 4 - podstawowe pętle zdają się dobrze działąć (przynajmniej na razie). Jeszcze 3 i algorytm będzie w pełni funkcjonalny. Potem zostaną poprawki. Na razie z warunków zakończenia 
      działa 9 ruchów. Będę musiał to poprawić, ale to nie priorytet. Licznik ruchów poprawiony, na razie chodzi dobrze.
#5 - dołożyłem brakujące elementy i program przy wielu próbach działał

'''
print(''

 X | X | X
-----------
 X | X | X
-----------
 X | X | X

'')

'''


# importuje random, żeby minimalnie zmniejszyć zjawisko wybierania tych samych ruchów przez komputer, gdy jest to niepotrzebne
import random 


numbers = [i for i in range(1,10)]
print(numbers)

ttt = ["1","2","3","4","5","6","7","8","9"]

# wszystkie możliwe kombinacje zwycięstwa
ruchy = [[1,2,3],[4,5,6],[7,8,9],[1,4,7],[2,5,8],[3,6,9],[1,5,9],[3,5,7]]

# można wybrać kto zaczyna
gracz_zaczyna = True




# funkcja pokazująca pole gry
def drukuj(ttt):

    pole = '''

 {} | {} | {}
-----------
 {} | {} | {}
-----------
 {} | {} | {}

'''.format(*ttt)
    print(pole)

# funkcja wprowadzania danych przez użytkownika
def wybor():
    global z 
    
    drukuj(ttt)
    z = str(input("Proszę wybrać pole 1-9:  "))
        
    if z in ttt and z!="X" and z!="O":
        return z  
    else:
        print("Niepoprawny wybór. Wybierz jeszcze raz.")  
        wybor()


# funkcja robiąca dokładnie to co jest zawarte w jej nazwie
def nowa_gra():

    global ttt
    y = input("Koniec gry! Czy chcesz spróbować ponownie? Y/N?")
    if y in ("y","Y"):
        ttt = ["1","2","3","4","5","6","7","8","9"]
        main_game()
    else:
        ttt = ["1","2","3","4","5","6","7","8","9"]
        print("Do zobaczenia.")
                


#funkcja sprawdzająca kto wygrał
def sprawdzenie():
    

    if licznik_gry == 9:
            drukuj(ttt)
            nowa_gra()
            



    for i in ruchy:
        licznik_x=0
        licznik_o=0

        for j in i:
            if ttt[j-1]=="X":
                licznik_x+=1
            if ttt[j-1]=="O":
                licznik_o+=1
        
        if licznik_x==3:
            drukuj(ttt)
            print("Wygrał gracz. Gratulacje!")
            nowa_gra()
            
        
        

        if licznik_o==3:
            drukuj(ttt)
            print("Wygrał komputer. Powodzenia nastęnpnym razem.")
            nowa_gra()

    licznik_x=0
    licznik_o=0      



# funkcja główna gry
def main_game():

    #global ttt
    global licznik_gry
    global gracz_zaczyna
    global ruchy
    licznik = 0
    licznik_gry=0
    ruch_kompa = False
    
    if licznik_gry<1 and gracz_zaczyna==False:
        ttt[4]="O"
        licznik_gry+=1
        drukuj(ttt)

    while licznik_gry!=9:
        print(licznik_gry)
       

        wybor()
        licznik_gry+=1
        print("Zwiększam licznik po wyborze gracza")

        sprawdzenie()

        licznik_x = 0
        licznik_o = 0
        ruch_kompa=False

        for count,ele in enumerate(ttt):
            if ele==z:
                ttt[count]="X"
                
        
    
       
        
        
# pętla stawiająca trzecie kółko (wygrana komputera)
        while licznik<len(ruchy) and ruch_kompa==False:
            for i in ruchy:
                if ruch_kompa==True:
                    break

                for j in i:
                    if ttt[j-1]=="O":
                        licznik_o+=1

                if licznik_o>1:
                    for k in i:
                        if ttt[k-1]!="O" and ttt[k-1]!="X":
                        #if ttt[k-1] in numbers==True:   # nie działa, gdyż ttt to lista str, a numbers int
                            ttt[k-1]="O"
                            ruch_kompa=True
                licznik_o=0
            
            licznik+=1
                

        licznik=0


# pętla blokująca dwa krzyżyki
        while licznik<len(ruchy) and ruch_kompa==False:
            for i in ruchy:
                if ruch_kompa==True:
                    break
            
                for j in i:
                
                    if ttt[j-1]=="X":
                        licznik_x+=1
                    
                if licznik_x>1:
                    for k in i:

                        if ttt[k-1]!="X" and ttt[k-1]!="O":
                        #if ttt[k-1] in numbers==True:   
                            ttt[k-1]="O"
                            ruch_kompa=True
                                  
                            
                                
                licznik_x=0
            licznik+=1

        licznik=0
        
# pętla robiąca drugie kółko   
        while licznik<len(ruchy) and ruch_kompa==False:
            for i in ruchy:
                if ruch_kompa==True:
                    break
            
                for j in i:
                
                    if ttt[j-1]=="O":
                        licznik_o+=1
                    if ttt[j-1]=="X":
                        licznik_x+=1
                    
                if licznik_o>0 and licznik_x==0:
                    for k in i:

                        if ttt[k-1]!="X" and ttt[k-1]!="O":
                        
                            ttt[k-1]="O"
                            ruch_kompa=True
                            break
                        break
                
                licznik_o=0
                licznik_x=0

            licznik+=1


        licznik=0

# pętla robiąca kółko na osi gdzie nie ma krzyżyka (pierwsze kółko)
        while licznik<len(ruchy) and ruch_kompa==False:
            for i in ruchy:
                if ruch_kompa==True:
                    break
            
                for j in i:
                
                    if ttt[j-1]=="O":
                        licznik_o+=1
                    if ttt[j-1]=="X":
                        licznik_x+=1
                    
                if licznik_o==0 and licznik_x==0:
                    l = random.randrange(0,3)
                    k=i[l]
                    ttt[k-1]="O"
                    ruch_kompa=True
                    break
                    
                
                licznik_o=0
                licznik_x=0

            licznik+=1


        licznik=0

# pętla robiąca ruch gdziekolwiek
        if ruch_kompa==False:
            possible = []
            for count,ele in enumerate(ttt):  #enumerate od 0 leci!
                
                if ele!="X" and ele!="O":
                    possible.append(count)
            
            l = random.randrange(0,len(possible))
            print("Oto nasz przypadek: "+str(possible[l]+1))
            ttt[possible[l]]="O"
            ruch_kompa=True





        # pod koniec ruchów kompa będzię zwiększenie licznika ruchów gry o 1. Zerujemy też fakt samego ruchu
        
        if ruch_kompa==True:
            licznik_gry+=1
            print("zwiększam licznik po ruchu kompa")
            ruch_kompa=False



        sprawdzenie()
        
    
    


    
        



main_game()




'''
#1. algo sprawdza, czy ma 2 kółka na linii, Jeżeli ma, instant 3 kółko i win 
#2. algo sprawdza, czy gracz ma 2 krzyżyki na linii. Jeżeli ma, zawsze w miejsu 3 krzyżyka kółko musi postawić
#3. algo stara się zrobic 2 kólko na linii, gdzie nie ma krzyżyka
#4. algo robi kolko na linii, gdzie nie ma krzyżyka
#5. jeżeli nie ma takiej opcji, algo blokuje krzyżyki kompa  
#6. jeżeli komp zaczyna, zrobi ruch na środku

'''
